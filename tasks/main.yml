---
  - name: Install software
    become: True
    apt:
      state: present
      update_cache: yes
      cache_valid_time: 1800
      name:
        - bind9-dyndb-ldap
        - bind9

  - name: Install software (manual notify)
    when: bind_notify_manual
    become: True
      state: present
      update_cache: yes
      cache_valid_time: 1800
      name:
        - manual-notify

  - name: Configure bind
    become: True
    template:
      src: "{{ item }}.j2"
      dest: "/etc/bind/{{ item }}"
      owner: root
      group: bind
      mode: 0644
    with_items:
      - named.conf.default-zones
      - named.conf.local
      - named.conf.options
    notify: restart bind

  - name: Create bind LDAP base
    run_once: true
    ldap_entry:
      dn: "{{ bind_ldap_base }}"
      server_uri: "{{ bind_ldap_ansible_url }}"
      bind_dn: "cn=Directory Manager"
      bind_pw: "{{ auth_ldap_admin_pwd }}"
      objectClass:
        - top
        - nsContainer
      attributes:
        cn: dns

  - name: Create dummy config
    run_once: true
    ldap_entry:
      dn: "{{ bind_ldap_base }}"
      server_uri: "{{ bind_ldap_ansible_url }}"
      bind_dn: "cn=Directory Manager"
      bind_pw: "{{ auth_ldap_admin_pwd }}"
      objectClass:
        - top
        - idnsConfigObject

  - name: Ensure DNSSEC key directories exist
    become: True
    file:
      path: "/var/cache/bind/dyndb-ldap/{{ bind_dns_ldap_zoneid }}/master/{{ item.zone }}/keys"
      owner: bind
      group: bind
      mode: 0750
      state: directory
    with_items: "{{ bind_dnssec_keys }}"

  - name: Upload DNSSEC Keys
    become: True
    copy:
      src: "keys/enc/{{ item.name }}"
      dest: "/var/cache/bind/dyndb-ldap/{{ bind_dns_ldap_zoneid }}/master/{{ item.zone }}/keys/{{ item.name }}"
      owner: bind
      group: bind
      mode: 0640
    with_items: "{{ bind_dnssec_keys }}"
    notify: restart bind

  - name: Create zones
    run_once: true
    ldap_entry:
      dn: "idnsName={{ item.name }},{{ bind_ldap_base }}"
      server_uri: "{{ bind_ldap_ansible_url }}"
      bind_dn: "cn=Directory Manager"
      bind_pw: "{{ auth_ldap_admin_pwd }}"
      objectClass:
        - top
        - idnsZone
        - idnsRecord
      attributes: "{{ item.attributes }}"
    with_items: "{{ bind_dns_zones }}"
    notify: restart bind

  - name: Create static entries
    run_once: true
    ldap_entry:
      dn: "idnsName={{ item.name }},idnsName={{ item.zone }},{{ bind_ldap_base }}"
      server_uri: "{{ bind_ldap_ansible_url }}"
      bind_dn: "cn=Directory Manager"
      bind_pw: "{{ auth_ldap_admin_pwd }}"
      objectClass:
        - top
        - idnsRecord
      attributes: "{{ item.attributes }}"
    with_items: "{{ bind_dns_entries }}"

  - name: Ensure that manual notify service config directory exists
    when: bind_notify_manual
    become: True
    file:
      path: /etc/manualNotify
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Configre manual notify service
    when: bind_notify_manual
    become: True
    copy:
      dest: /etc/manualNotify/config.yml
      owner: root
      group: root
      mode: 0640
      content: "{{ bind_notify_manual_config|to_nice_yaml }}"
    notify: restart manual-notify

  - meta: flush_handlers
